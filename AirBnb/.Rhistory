grid.arrange(p1, p2, ncol = 2)
p1 <- ggplot(plot.frame, aes(x=iter)) +
geom_line(aes(y = sum_cov), color = "black", linetype = "solid") +
labs(title = "", x = "Iter", y = "Sum of covariances", color = "") +
theme_minimal() + theme(legend.position = "bottom") + ylim(-1, 1)
plot.frame <- data.frame(
"iter" = 1:101,
"w1" = rowMeans(w_alg1),
"w2" = rowMeans(w_alg2),
"w3" = rowMeans(w_alg3),
"w4" = rowMeans(w_alg4)
)
p2 <- ggplot(plot.frame, aes(x=iter)) +
geom_line(aes(y = w1, color = "w1"), linetype = "solid", linewidth = 0.75) +
geom_line(aes(y = w2, color = "w2"), linetype = "dashed", linewidth = 0.75) +
geom_line(aes(y = w3, color = "w3"), linetype = "dotted", linewidth = 0.75) +
geom_line(aes(y = w4, color = "w4"), linetype = "longdash", linewidth = 0.75) +
scale_color_manual(
values = c("w1" = "blue", "w2" = "red", "w3" = "forestgreen", "w4" = "orange"),
labels = c("w1" = expression(lambda[1]), "w2" = expression(lambda[2]), "w3" = expression(lambda[3]), "w4" = expression(lambda[4]))) +
labs(title = "", x = "Iter", y = "Weigths", color = "") +
theme_minimal() + theme(legend.position = "bottom") + ylim(0, 1)
grid.arrange(p1, p2, ncol = 2)
p2 <- ggplot(plot.frame, aes(x=iter)) +
geom_line(aes(y = w1, color = "w1"), linetype = "solid", linewidth = 0.75) +
geom_line(aes(y = w2, color = "w2"), linetype = "dashed", linewidth = 0.75) +
geom_line(aes(y = w3, color = "w3"), linetype = "dotted", linewidth = 0.75) +
geom_line(aes(y = w4, color = "w4"), linetype = "longdash", linewidth = 0.75) +
scale_color_manual(
values = c("w1" = "blue", "w2" = "red", "w3" = "forestgreen", "w4" = "orange"),
labels = c("w1" = expression(lambda[1]), "w2" = expression(lambda[2]), "w3" = expression(lambda[3]), "w4" = expression(lambda[4]))) +
labs(title = "", x = "Iter", y = "Weigths", color = "") +
theme_minimal() + theme(legend.position = "rigth") + ylim(0, 1)
grid.arrange(p1, p2, ncol = 2)
p2 <- ggplot(plot.frame, aes(x=iter)) +
geom_line(aes(y = w1, color = "w1"), linetype = "solid", linewidth = 0.75) +
geom_line(aes(y = w2, color = "w2"), linetype = "dashed", linewidth = 0.75) +
geom_line(aes(y = w3, color = "w3"), linetype = "dotted", linewidth = 0.75) +
geom_line(aes(y = w4, color = "w4"), linetype = "longdash", linewidth = 0.75) +
scale_color_manual(
values = c("w1" = "blue", "w2" = "red", "w3" = "forestgreen", "w4" = "orange"),
labels = c("w1" = expression(lambda[1]), "w2" = expression(lambda[2]), "w3" = expression(lambda[3]), "w4" = expression(lambda[4]))) +
labs(title = "", x = "Iter", y = "Weigths", color = "") +
theme_minimal() + theme(legend.position = "left") + ylim(0, 1)
grid.arrange(p1, p2, ncol = 2)
p2 <- ggplot(plot.frame, aes(x=iter)) +
geom_line(aes(y = w1, color = "w1"), linetype = "solid", linewidth = 0.75) +
geom_line(aes(y = w2, color = "w2"), linetype = "dashed", linewidth = 0.75) +
geom_line(aes(y = w3, color = "w3"), linetype = "dotted", linewidth = 0.75) +
geom_line(aes(y = w4, color = "w4"), linetype = "longdash", linewidth = 0.75) +
scale_color_manual(
values = c("w1" = "blue", "w2" = "red", "w3" = "forestgreen", "w4" = "orange"),
labels = c("w1" = expression(lambda[1]), "w2" = expression(lambda[2]), "w3" = expression(lambda[3]), "w4" = expression(lambda[4]))) +
labs(title = "", x = "Iter", y = "Weigths", color = "") +
theme_minimal() + theme(legend.position = "rigth") + ylim(0, 1)
p2
p2 <- ggplot(plot.frame, aes(x=iter)) +
geom_line(aes(y = w1, color = "w1"), linetype = "solid", linewidth = 0.75) +
geom_line(aes(y = w2, color = "w2"), linetype = "dashed", linewidth = 0.75) +
geom_line(aes(y = w3, color = "w3"), linetype = "dotted", linewidth = 0.75) +
geom_line(aes(y = w4, color = "w4"), linetype = "longdash", linewidth = 0.75) +
scale_color_manual(
values = c("w1" = "blue", "w2" = "red", "w3" = "forestgreen", "w4" = "orange"),
labels = c("w1" = expression(lambda[1]), "w2" = expression(lambda[2]), "w3" = expression(lambda[3]), "w4" = expression(lambda[4]))) +
labs(title = "", x = "Iter", y = "Weigths", color = "") +
theme_minimal() + theme(legend.position = "rigth") + ylim(0, 1)
p2
p2 <- ggplot(plot.frame, aes(x=iter)) +
geom_line(aes(y = w1, color = "w1"), linetype = "solid", linewidth = 0.75) +
geom_line(aes(y = w2, color = "w2"), linetype = "dashed", linewidth = 0.75) +
geom_line(aes(y = w3, color = "w3"), linetype = "dotted", linewidth = 0.75) +
geom_line(aes(y = w4, color = "w4"), linetype = "longdash", linewidth = 0.75) +
scale_color_manual(
values = c("w1" = "blue", "w2" = "red", "w3" = "forestgreen", "w4" = "orange"),
labels = c("w1" = expression(lambda[1]), "w2" = expression(lambda[2]), "w3" = expression(lambda[3]), "w4" = expression(lambda[4]))) +
labs(title = "", x = "Iter", y = "Weigths", color = "") +
theme_minimal() + theme(legend.position = "right") + ylim(0, 1)
p2
p2 <- ggplot(plot.frame, aes(x=iter)) +
geom_line(aes(y = w1, color = "w1"), linetype = "solid", linewidth = 0.75) +
geom_line(aes(y = w2, color = "w2"), linetype = "dashed", linewidth = 0.75) +
geom_line(aes(y = w3, color = "w3"), linetype = "dotted", linewidth = 0.75) +
geom_line(aes(y = w4, color = "w4"), linetype = "longdash", linewidth = 0.75) +
scale_color_manual(
values = c("w1" = "blue", "w2" = "red", "w3" = "forestgreen", "w4" = "orange"),
labels = c("w1" = expression(lambda[1]), "w2" = expression(lambda[2]), "w3" = expression(lambda[3]), "w4" = expression(lambda[4]))) +
labs(title = "", x = "Iter", y = "Weigths", color = "") +
theme_minimal() + theme(legend.position = "right") + ylim(0, 1)
grid.arrange(p1, p2, ncol = 2)
p2 <- ggplot(plot.frame, aes(x=iter)) +
geom_line(aes(y = w1, color = "w1"), linetype = "solid", linewidth = 0.75) +
geom_line(aes(y = w2, color = "w2"), linetype = "dashed", linewidth = 0.75) +
geom_line(aes(y = w3, color = "w3"), linetype = "dotted", linewidth = 0.75) +
geom_line(aes(y = w4, color = "w4"), linetype = "longdash", linewidth = 0.75) +
scale_color_manual(
values = c("w1" = "blue", "w2" = "red", "w3" = "forestgreen", "w4" = "orange"),
labels = c("w1" = expression(lambda[1]), "w2" = expression(lambda[2]), "w3" = expression(lambda[3]), "w4" = expression(lambda[4]))) +
labs(title = "", x = "Iter", y = "Weigths", color = "") +
theme_minimal() + theme(legend.position = "bottom") + ylim(0, 1)
grid.arrange(p1, p2, ncol = 2)
rm(list = ls())
library(ggplot2)
library(gridExtra)
load("sims_cor.RData")
#
w_alg1_c <- w_alg1
for(i in 1:NROW(w_alg1_c)){
w_alg1_c[i,] <- w_alg1[i,] - mean(w_alg1[i,])
}
w_alg2_c <- w_alg2
for(i in 1:NROW(w_alg2_c)){
w_alg2_c[i,] <- w_alg2[i,] - mean(w_alg2[i,])
}
w_alg3_c <- w_alg3
for(i in 1:NROW(w_alg3_c)){
w_alg3_c[i,] <- w_alg3[i,] - mean(w_alg3[i,])
}
w_alg4_c <- w_alg4
for(i in 1:NROW(w_alg4_c)){
w_alg4_c[i,] <- w_alg4[i,] - mean(w_alg4[i,])
}
m_alg1_c <- m_alg1
for(i in 1:NROW(m_alg1_c)){
m_alg1_c[i,] <- m_alg1[i,] - mean(m_alg1[i,])
}
m_alg2_c <- m_alg2
for(i in 1:NROW(m_alg2_c)){
m_alg2_c[i,] <- m_alg2[i,] - mean(m_alg2[i,])
}
m_alg3_c <- m_alg3
for(i in 1:NROW(m_alg3_c)){
m_alg3_c[i,] <- m_alg3[i,] - mean(m_alg3[i,])
}
m_alg4_c <- m_alg4
for(i in 1:NROW(m_alg4_c)){
m_alg4_c[i,] <- m_alg4[i,] - mean(m_alg4[i,])
}
sums_wm <- w_alg1_c*m_alg1_c + w_alg2_c*m_alg2_c + w_alg3_c*m_alg3_c + w_alg4_c*m_alg4_c
sum_cov <- rowMeans(sums_wm)
plot.frame <- data.frame(
iter = 100:200,
sum_cov = sum_cov
)
p1 <- ggplot(plot.frame, aes(x=iter)) +
geom_line(aes(y = sum_cov), color = "black", linetype = "solid") +
labs(title = "", x = "Iter", y = "Sum of covariances", color = "") +
theme_minimal() + theme(legend.position = "bottom") + ylim(-1, 1)
plot.frame <- data.frame(
"iter" = 100:200,
"w1" = rowMeans(w_alg1),
"w2" = rowMeans(w_alg2),
"w3" = rowMeans(w_alg3),
"w4" = rowMeans(w_alg4)
)
p2 <- ggplot(plot.frame, aes(x=iter)) +
geom_line(aes(y = w1, color = "w1"), linetype = "solid", linewidth = 0.75) +
geom_line(aes(y = w2, color = "w2"), linetype = "dashed", linewidth = 0.75) +
geom_line(aes(y = w3, color = "w3"), linetype = "dotted", linewidth = 0.75) +
geom_line(aes(y = w4, color = "w4"), linetype = "longdash", linewidth = 0.75) +
scale_color_manual(
values = c("w1" = "blue", "w2" = "red", "w3" = "forestgreen", "w4" = "orange"),
labels = c("w1" = expression(lambda[1]), "w2" = expression(lambda[2]), "w3" = expression(lambda[3]), "w4" = expression(lambda[4]))) +
labs(title = "", x = "Iter", y = "Weigths", color = "") +
theme_minimal() + theme(legend.position = "bottom") + ylim(0, 1)
grid.arrange(p1, p2, ncol = 2)
# WMA for high-dimensional regression
rm(list = ls())
library(conformalInference)
library(dplyr)
library(tidyverse)
library(glmnet)
library(ggplot2)
library(gridExtra)
library(limSolve)
source("utils_funs.R")
setwd("~/Desktop/Phd/Research/CMU/Coma/Code/AirBnb")
source("utils_funs.R")
# Load data -----
dati <- read.table("affitti.txt", header = T)
dati <- dati %>% select(price, latitude, longitude, accommodates, bathrooms, bedrooms,
extra_people, minimum_nights, maximum_nights, number_of_reviews,
review_scores_rating, review_scores_accuracy, reviews_per_month,
aggressioni_1000, droga_1000, furti_1000)
# creation of the outcome and the X matrix
y <- log(dati$price)
X <- dati[,-1]
X <- scale(X)
set.seed(123)
train <- sample(1:NROW(y), 75000)
test  <- sample(setdiff(1:NROW(y), train), 75)
yt <- y[train]
Xt <- X[train,]
y0 <- y[test]
X0 <- X[test,]
# set the functions
nnet.funs <- list(
train = function(x, y, ...) nnet.train(x, y, size = 8, decay = 1, linout = T, maxit = 2000),
predict  = function(out, newx) nnet.preds(out, newx)
)
funs <- list()
funs[[1]] <- rf.funs(ntree = 250, varfrac = 4/16)
funs[[2]] <- lm.funs()
funs[[3]] <- lasso.funs(standardize = F, lambda = 0.1)
funs[[4]] <- ridge.funs(standardize = F, lambda = 0.1)
funs[[5]] <- nnet.funs
# Simulation ----
t     <- 75          # number of rounds
k     <- length(funs)# number of methods
w     <- rep(1, k)   # initial weights
a     <- 1           # lin. combination
b     <- 0           # lin. combination
alpha <- 0.1         # confidence level
mat_best <- rep(NA, t)
weights  <- losses <- matrix(NA, ncol = k, nrow = t)
cis_t    <- vector("list", t)
set.seed(321)
for(i in 1:t){
sel<- (1+1000*(i-1)):(1000*i)
Xa <- Xt[sel,]
ya <- yt[sel]
# prediction intervals
conf.pred.ints <-lapply(funs, function(z) conformal.pred.split(Xa, ya, X0[i,], alpha = alpha/2,
train.fun = z$train, predict.fun = z$predict))
cis <- matrix(NA, nrow = k, ncol = 2)
for(l in 1:k){
cis[l,1] <- conf.pred.ints[[l]]$lo
cis[l,2] <- conf.pred.ints[[l]]$up
}
cis_t[[i]]   <- cis
mat_best[i]  <- min(sizes(conf.pred.ints))
# update weights
loss        <- loss_fun_ls(y0[i], conf.pred.ints, a, b)
losses[i,]  <- loss
if(i %% 10 == 0) cat(i, "\n")
}
# Compute the algorithms -----
## Without NN ----
hed_alg1 <- hedge(losses[,1:4], 0.1)
hed_alg2 <- hedge(losses[,1:4], 1)
ada_alg  <- adahedge(losses[,1:4])
results1 <- data.frame(iter  = 1:length(losses[,1] %>% stats::filter(., rep(1/5,5))),
RF = losses[,1] %>% stats::filter(., rep(1/5,5)),
Hedge_0.1 = hed_alg1$h %>% stats::filter(., rep(1/5,5)),
Hedge_1   = hed_alg2$h %>% stats::filter(., rep(1/5,5)),
AdaHedge  = ada_alg$h%>% stats::filter(., rep(1/5,5)))
p1<-ggplot(results1, aes(x = iter)) +
geom_line(aes(y = RF, color = "RF"), linetype = "solid", size = 1) +
geom_line(aes(y = Hedge_0.1, color = "eta = 0.1"), linetype = "longdash", size = 1) +
geom_line(aes(y = Hedge_1, color = "eta = 1"), linetype = "longdash", size = 1) +
geom_line(aes(y = AdaHedge, color =  "Adaptive eta"), linetype = "dashed", size = 1) +
labs(title = "", x = "Iter", y = "Hedge Loss", color = "") +
scale_color_manual(
values = c("RF" = "blue", "eta = 0.1" = "red", "eta = 1" = "forestgreen", "Adaptive eta" = "orange"),
labels = c("RF" = "RF", "eta = 0.1" = expression(eta==0.1), "eta = 1" = expression(eta==1), "Adaptive eta" = expression(paste("Adaptive ",eta)), "NN" = "NN")) +
theme_minimal() + theme(legend.position = "bottom") +
guides(linetype = guide_legend(keywidth = 3, keyheight = 1)) +
ylim(1.55, 1.9)
## With NN -----
hed_alg1_nn <- hedge(losses, 0.1)
hed_alg2_nn <- hedge(losses, 1)
ada_alg_nn  <- adahedge(losses)
results2 <- data.frame(iter  = 1:length(losses[,1] %>% stats::filter(., rep(1/5,5))),
RF = losses[,1] %>% stats::filter(., rep(1/5,5)),
NN = losses[,5] %>% stats::filter(., rep(1/5,5)),
Hedge_0.1 = hed_alg1_nn$h %>% stats::filter(., rep(1/5,5)),
Hedge_1   = hed_alg2_nn$h %>% stats::filter(., rep(1/5,5)),
AdaHedge  = ada_alg_nn$h%>% stats::filter(., rep(1/5,5)))
p2<-ggplot(results2, aes(x = iter)) +
geom_line(aes(y = RF, color = "RF"), linetype = "solid", size = 1) +
geom_line(aes(y = NN, color = "NN"), linetype = "solid", size = 1) +
geom_line(aes(y = Hedge_0.1, color = "eta = 0.1"), linetype = "longdash", size = 1) +
geom_line(aes(y = Hedge_1, color = "eta = 1"), linetype = "longdash", size = 1) +
geom_line(aes(y = AdaHedge, color = "Adaptive eta"), linetype = "dashed", size = 1) +
labs(title = "", x = "Iter", y = "Hedge Loss", color = "") +
scale_color_manual(
values = c("RF" = "blue", "eta = 0.1" = "red", "eta = 1" = "forestgreen", "Adaptive eta" = "orange", "NN" = "pink"),
labels = c("RF" = "RF", "eta = 0.1" = expression(eta==0.1), "eta = 1" = expression(eta==1), "Adaptive eta" = expression(paste("Adaptive ",eta)), "NN" = "NN")) +
theme_minimal() + theme(legend.position = "bottom") +
ylim(1.55, 1.9)
grid.arrange(p1, p2, nrow = 1)
p1<-ggplot(results1, aes(x = iter)) +
geom_line(aes(y = RF, color = "RF"), linetype = "solid", size = 1) +
geom_line(aes(y = Hedge_0.1, color = "eta = 0.1"), linetype = "longdash", size = 1) +
geom_line(aes(y = Hedge_1, color = "eta = 1"), linetype = "longdash", size = 1) +
geom_line(aes(y = AdaHedge, color =  "Adaptive eta"), linetype = "dashed", size = 1) +
labs(title = "", x = "Iter", y = "Hedge Loss", color = "") +
scale_color_manual(
values = c("RF" = "blue", "eta = 0.1" = "red", "eta = 1" = "forestgreen", "Adaptive eta" = "orange"),
labels = c("RF" = "RF", "eta = 0.1" = expression(eta==0.1), "eta = 1" = expression(eta==1), "Adaptive eta" = expression(paste("Adaptive ",eta)), "NN" = "NN")) +
theme_minimal() + theme(legend.position = "left") +
guides(linetype = guide_legend(keywidth = 3, keyheight = 1)) +
ylim(1.55, 1.9)
## With NN -----
hed_alg1_nn <- hedge(losses, 0.1)
hed_alg2_nn <- hedge(losses, 1)
ada_alg_nn  <- adahedge(losses)
results2 <- data.frame(iter  = 1:length(losses[,1] %>% stats::filter(., rep(1/5,5))),
RF = losses[,1] %>% stats::filter(., rep(1/5,5)),
NN = losses[,5] %>% stats::filter(., rep(1/5,5)),
Hedge_0.1 = hed_alg1_nn$h %>% stats::filter(., rep(1/5,5)),
Hedge_1   = hed_alg2_nn$h %>% stats::filter(., rep(1/5,5)),
AdaHedge  = ada_alg_nn$h%>% stats::filter(., rep(1/5,5)))
p2<-ggplot(results2, aes(x = iter)) +
geom_line(aes(y = RF, color = "RF"), linetype = "solid", size = 1) +
geom_line(aes(y = NN, color = "NN"), linetype = "solid", size = 1) +
geom_line(aes(y = Hedge_0.1, color = "eta = 0.1"), linetype = "longdash", size = 1) +
geom_line(aes(y = Hedge_1, color = "eta = 1"), linetype = "longdash", size = 1) +
geom_line(aes(y = AdaHedge, color = "Adaptive eta"), linetype = "dashed", size = 1) +
labs(title = "", x = "Iter", y = "Hedge Loss", color = "") +
scale_color_manual(
values = c("RF" = "blue", "eta = 0.1" = "red", "eta = 1" = "forestgreen", "Adaptive eta" = "orange", "NN" = "pink"),
labels = c("RF" = "RF", "eta = 0.1" = expression(eta==0.1), "eta = 1" = expression(eta==1), "Adaptive eta" = expression(paste("Adaptive ",eta)), "NN" = "NN")) +
theme_minimal() + theme(legend.position = "left") +
ylim(1.55, 1.9)
grid.arrange(p1, p2, nrow = 1)
p1<-ggplot(results1, aes(x = iter)) +
geom_line(aes(y = RF, color = "RF"), linetype = "solid", size = 1) +
geom_line(aes(y = Hedge_0.1, color = "eta = 0.1"), linetype = "longdash", size = 1) +
geom_line(aes(y = Hedge_1, color = "eta = 1"), linetype = "longdash", size = 1) +
geom_line(aes(y = AdaHedge, color =  "Adaptive eta"), linetype = "dashed", size = 1) +
labs(title = "", x = "Iter", y = "Hedge Loss", color = "") +
scale_color_manual(
values = c("RF" = "blue", "eta = 0.1" = "red", "eta = 1" = "forestgreen", "Adaptive eta" = "orange"),
labels = c("RF" = "RF", "eta = 0.1" = expression(eta==0.1), "eta = 1" = expression(eta==1), "Adaptive eta" = expression(paste("Adaptive ",eta)), "NN" = "NN")) +
theme_minimal() + theme(legend.position = "right") +
guides(linetype = guide_legend(keywidth = 3, keyheight = 1)) +
ylim(1.55, 1.9)
## With NN -----
hed_alg1_nn <- hedge(losses, 0.1)
hed_alg2_nn <- hedge(losses, 1)
ada_alg_nn  <- adahedge(losses)
results2 <- data.frame(iter  = 1:length(losses[,1] %>% stats::filter(., rep(1/5,5))),
RF = losses[,1] %>% stats::filter(., rep(1/5,5)),
NN = losses[,5] %>% stats::filter(., rep(1/5,5)),
Hedge_0.1 = hed_alg1_nn$h %>% stats::filter(., rep(1/5,5)),
Hedge_1   = hed_alg2_nn$h %>% stats::filter(., rep(1/5,5)),
AdaHedge  = ada_alg_nn$h%>% stats::filter(., rep(1/5,5)))
p2<-ggplot(results2, aes(x = iter)) +
geom_line(aes(y = RF, color = "RF"), linetype = "solid", size = 1) +
geom_line(aes(y = NN, color = "NN"), linetype = "solid", size = 1) +
geom_line(aes(y = Hedge_0.1, color = "eta = 0.1"), linetype = "longdash", size = 1) +
geom_line(aes(y = Hedge_1, color = "eta = 1"), linetype = "longdash", size = 1) +
geom_line(aes(y = AdaHedge, color = "Adaptive eta"), linetype = "dashed", size = 1) +
labs(title = "", x = "Iter", y = "Hedge Loss", color = "") +
scale_color_manual(
values = c("RF" = "blue", "eta = 0.1" = "red", "eta = 1" = "forestgreen", "Adaptive eta" = "orange", "NN" = "pink"),
labels = c("RF" = "RF", "eta = 0.1" = expression(eta==0.1), "eta = 1" = expression(eta==1), "Adaptive eta" = expression(paste("Adaptive ",eta)), "NN" = "NN")) +
theme_minimal() + theme(legend.position = "right") +
ylim(1.55, 1.9)
grid.arrange(p1, p2, nrow = 1)
p1<-ggplot(results1, aes(x = iter)) +
geom_line(aes(y = RF, color = "RF"), linetype = "solid", size = 1) +
geom_line(aes(y = Hedge_0.1, color = "eta = 0.1"), linetype = "longdash", size = 1) +
geom_line(aes(y = Hedge_1, color = "eta = 1"), linetype = "longdash", size = 1) +
geom_line(aes(y = AdaHedge, color =  "Adaptive eta"), linetype = "dashed", size = 1) +
labs(title = "", x = "Iter", y = "Hedge Loss", color = "", ysize = 12) +
scale_color_manual(
values = c("RF" = "blue", "eta = 0.1" = "red", "eta = 1" = "forestgreen", "Adaptive eta" = "orange"),
labels = c("RF" = "RF", "eta = 0.1" = expression(eta==0.1), "eta = 1" = expression(eta==1), "Adaptive eta" = expression(paste("Adaptive ",eta)), "NN" = "NN")) +
theme_minimal() + theme(legend.position = "right") +
guides(linetype = guide_legend(keywidth = 3, keyheight = 1)) +
ylim(1.55, 1.9)
p1
p1<-ggplot(results1, aes(x = iter)) +
geom_line(aes(y = RF, color = "RF"), linetype = "solid", size = 1) +
geom_line(aes(y = Hedge_0.1, color = "eta = 0.1"), linetype = "longdash", size = 1) +
geom_line(aes(y = Hedge_1, color = "eta = 1"), linetype = "longdash", size = 1) +
geom_line(aes(y = AdaHedge, color =  "Adaptive eta"), linetype = "dashed", size = 1) +
labs(title = "", x = "Iter", y = "Hedge Loss", color = "") +
scale_color_manual(
values = c("RF" = "blue", "eta = 0.1" = "red", "eta = 1" = "forestgreen", "Adaptive eta" = "orange"),
labels = c("RF" = "RF", "eta = 0.1" = expression(eta==0.1), "eta = 1" = expression(eta==1), "Adaptive eta" = expression(paste("Adaptive ",eta)), "NN" = "NN")) +
theme_minimal() + theme(legend.position = "right") + theme(axis.title.y = element_text(size = 14)) +
guides(linetype = guide_legend(keywidth = 3, keyheight = 1)) +
ylim(1.55, 1.9)
p1
p1<-ggplot(results1, aes(x = iter)) +
geom_line(aes(y = RF, color = "RF"), linetype = "solid", size = 1) +
geom_line(aes(y = Hedge_0.1, color = "eta = 0.1"), linetype = "longdash", size = 1) +
geom_line(aes(y = Hedge_1, color = "eta = 1"), linetype = "longdash", size = 1) +
geom_line(aes(y = AdaHedge, color =  "Adaptive eta"), linetype = "dashed", size = 1) +
labs(title = "", x = "Iter", y = "Hedge Loss", color = "") +
scale_color_manual(
values = c("RF" = "blue", "eta = 0.1" = "red", "eta = 1" = "forestgreen", "Adaptive eta" = "orange"),
labels = c("RF" = "RF", "eta = 0.1" = expression(eta==0.1), "eta = 1" = expression(eta==1), "Adaptive eta" = expression(paste("Adaptive ",eta)), "NN" = "NN")) +
theme_minimal() + theme(legend.position = "right") + theme(axis.title.y = element_text(size = 16)) +
guides(linetype = guide_legend(keywidth = 3, keyheight = 1)) +
ylim(1.55, 1.9)
p2<-ggplot(results2, aes(x = iter)) +
geom_line(aes(y = RF, color = "RF"), linetype = "solid", size = 1) +
geom_line(aes(y = NN, color = "NN"), linetype = "solid", size = 1) +
geom_line(aes(y = Hedge_0.1, color = "eta = 0.1"), linetype = "longdash", size = 1) +
geom_line(aes(y = Hedge_1, color = "eta = 1"), linetype = "longdash", size = 1) +
geom_line(aes(y = AdaHedge, color = "Adaptive eta"), linetype = "dashed", size = 1) +
labs(title = "", x = "Iter", y = "Hedge Loss", color = "") +
scale_color_manual(
values = c("RF" = "blue", "eta = 0.1" = "red", "eta = 1" = "forestgreen", "Adaptive eta" = "orange", "NN" = "pink"),
labels = c("RF" = "RF", "eta = 0.1" = expression(eta==0.1), "eta = 1" = expression(eta==1), "Adaptive eta" = expression(paste("Adaptive ",eta)), "NN" = "NN")) +
theme_minimal() + theme(legend.position = "right", theme(axis.title.y = element_text(size = 16), axis.title.x = element_text(size = 16)) +) +
p2<-ggplot(results2, aes(x = iter)) +
geom_line(aes(y = RF, color = "RF"), linetype = "solid", size = 1) +
geom_line(aes(y = NN, color = "NN"), linetype = "solid", size = 1) +
geom_line(aes(y = Hedge_0.1, color = "eta = 0.1"), linetype = "longdash", size = 1) +
geom_line(aes(y = Hedge_1, color = "eta = 1"), linetype = "longdash", size = 1) +
geom_line(aes(y = AdaHedge, color = "Adaptive eta"), linetype = "dashed", size = 1) +
labs(title = "", x = "Iter", y = "Hedge Loss", color = "") +
scale_color_manual(
values = c("RF" = "blue", "eta = 0.1" = "red", "eta = 1" = "forestgreen", "Adaptive eta" = "orange", "NN" = "pink"),
labels = c("RF" = "RF", "eta = 0.1" = expression(eta==0.1), "eta = 1" = expression(eta==1), "Adaptive eta" = expression(paste("Adaptive ",eta)), "NN" = "NN")) +
theme_minimal() + theme(legend.position = "right", axis.title.y = element_text(size = 16), axis.title.x = element_text(size = 16)) +
ylim(1.55, 1.9)
grid.arrange(p1, p2, nrow = 1)
p1<-ggplot(results1, aes(x = iter)) +
geom_line(aes(y = RF, color = "RF"), linetype = "solid", size = 1) +
geom_line(aes(y = Hedge_0.1, color = "eta = 0.1"), linetype = "longdash", size = 1) +
geom_line(aes(y = Hedge_1, color = "eta = 1"), linetype = "longdash", size = 1) +
geom_line(aes(y = AdaHedge, color =  "Adaptive eta"), linetype = "dashed", size = 1) +
labs(title = "", x = "Iter", y = "Hedge Loss", color = "") +
scale_color_manual(
values = c("RF" = "blue", "eta = 0.1" = "red", "eta = 1" = "forestgreen", "Adaptive eta" = "orange"),
labels = c("RF" = "RF", "eta = 0.1" = expression(eta==0.1), "eta = 1" = expression(eta==1), "Adaptive eta" = expression(paste("Adaptive ",eta)), "NN" = "NN")) +
theme_minimal() + theme(legend.position = "right") + theme(axis.title.y = element_text(size = 16), axis.title.x = element_text(size = 16)) +
guides(linetype = guide_legend(keywidth = 3, keyheight = 1)) +
ylim(1.55, 1.9)
## With NN -----
hed_alg1_nn <- hedge(losses, 0.1)
hed_alg2_nn <- hedge(losses, 1)
ada_alg_nn  <- adahedge(losses)
results2 <- data.frame(iter  = 1:length(losses[,1] %>% stats::filter(., rep(1/5,5))),
RF = losses[,1] %>% stats::filter(., rep(1/5,5)),
NN = losses[,5] %>% stats::filter(., rep(1/5,5)),
Hedge_0.1 = hed_alg1_nn$h %>% stats::filter(., rep(1/5,5)),
Hedge_1   = hed_alg2_nn$h %>% stats::filter(., rep(1/5,5)),
AdaHedge  = ada_alg_nn$h%>% stats::filter(., rep(1/5,5)))
p2<-ggplot(results2, aes(x = iter)) +
geom_line(aes(y = RF, color = "RF"), linetype = "solid", size = 1) +
geom_line(aes(y = NN, color = "NN"), linetype = "solid", size = 1) +
geom_line(aes(y = Hedge_0.1, color = "eta = 0.1"), linetype = "longdash", size = 1) +
geom_line(aes(y = Hedge_1, color = "eta = 1"), linetype = "longdash", size = 1) +
geom_line(aes(y = AdaHedge, color = "Adaptive eta"), linetype = "dashed", size = 1) +
labs(title = "", x = "Iter", y = "Hedge Loss", color = "") +
scale_color_manual(
values = c("RF" = "blue", "eta = 0.1" = "red", "eta = 1" = "forestgreen", "Adaptive eta" = "orange", "NN" = "pink"),
labels = c("RF" = "RF", "eta = 0.1" = expression(eta==0.1), "eta = 1" = expression(eta==1), "Adaptive eta" = expression(paste("Adaptive ",eta)), "NN" = "NN")) +
theme_minimal() + theme(legend.position = "right", axis.title.y = element_text(size = 16), axis.title.x = element_text(size = 16)) +
ylim(1.55, 1.9)
grid.arrange(p1, p2, nrow = 1)
theme_minimal() + theme(legend.position = "right", axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), legend.text = element_text(size = 12) +
ylim(1.55, 1.9)
grid.arrange(p1, p2, nrow = 1)
ylim(1.55, 1.9)
p2<-ggplot(results2, aes(x = iter)) +
geom_line(aes(y = RF, color = "RF"), linetype = "solid", size = 1) +
geom_line(aes(y = NN, color = "NN"), linetype = "solid", size = 1) +
geom_line(aes(y = Hedge_0.1, color = "eta = 0.1"), linetype = "longdash", size = 1) +
geom_line(aes(y = Hedge_1, color = "eta = 1"), linetype = "longdash", size = 1) +
geom_line(aes(y = AdaHedge, color = "Adaptive eta"), linetype = "dashed", size = 1) +
labs(title = "", x = "Iter", y = "Hedge Loss", color = "") +
scale_color_manual(
values = c("RF" = "blue", "eta = 0.1" = "red", "eta = 1" = "forestgreen", "Adaptive eta" = "orange", "NN" = "pink"),
labels = c("RF" = "RF", "eta = 0.1" = expression(eta==0.1), "eta = 1" = expression(eta==1), "Adaptive eta" = expression(paste("Adaptive ",eta)), "NN" = "NN")) +
theme_minimal() + theme(legend.position = "right", axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), legend.text = element_text(size = 20)) +
ylim(1.55, 1.9)
grid.arrange(p1, p2, nrow = 1)
p2<-ggplot(results2, aes(x = iter)) +
geom_line(aes(y = RF, color = "RF"), linetype = "solid", size = 1) +
geom_line(aes(y = NN, color = "NN"), linetype = "solid", size = 1) +
geom_line(aes(y = Hedge_0.1, color = "eta = 0.1"), linetype = "longdash", size = 1) +
geom_line(aes(y = Hedge_1, color = "eta = 1"), linetype = "longdash", size = 1) +
geom_line(aes(y = AdaHedge, color = "Adaptive eta"), linetype = "dashed", size = 1) +
labs(title = "", x = "Iter", y = "Hedge Loss", color = "") +
scale_color_manual(
values = c("RF" = "blue", "eta = 0.1" = "red", "eta = 1" = "forestgreen", "Adaptive eta" = "orange", "NN" = "pink"),
labels = c("RF" = "RF", "eta = 0.1" = expression(eta==0.1), "eta = 1" = expression(eta==1), "Adaptive eta" = expression(paste("Adaptive ",eta)), "NN" = "NN")) +
theme_minimal() + theme(legend.position = "right", axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), legend.text = element_text(size = 12)) +
ylim(1.55, 1.9)
grid.arrange(p1, p2, nrow = 1)
p1<-ggplot(results1, aes(x = iter)) +
geom_line(aes(y = RF, color = "RF"), linetype = "solid", size = 1) +
geom_line(aes(y = Hedge_0.1, color = "eta = 0.1"), linetype = "longdash", size = 1) +
geom_line(aes(y = Hedge_1, color = "eta = 1"), linetype = "longdash", size = 1) +
geom_line(aes(y = AdaHedge, color =  "Adaptive eta"), linetype = "dashed", size = 1) +
labs(title = "", x = "Iter", y = "Hedge Loss", color = "") +
scale_color_manual(
values = c("RF" = "blue", "eta = 0.1" = "red", "eta = 1" = "forestgreen", "Adaptive eta" = "orange"),
labels = c("RF" = "RF", "eta = 0.1" = expression(eta==0.1), "eta = 1" = expression(eta==1), "Adaptive eta" = expression(paste("Adaptive ",eta)), "NN" = "NN")) +
theme_minimal() + theme(legend.position = "right", axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), legend.text = element_text(size = 12)) +
guides(linetype = guide_legend(keywidth = 3, keyheight = 1)) +
ylim(1.55, 1.9)
## With NN -----
hed_alg1_nn <- hedge(losses, 0.1)
hed_alg2_nn <- hedge(losses, 1)
ada_alg_nn  <- adahedge(losses)
results2 <- data.frame(iter  = 1:length(losses[,1] %>% stats::filter(., rep(1/5,5))),
RF = losses[,1] %>% stats::filter(., rep(1/5,5)),
NN = losses[,5] %>% stats::filter(., rep(1/5,5)),
Hedge_0.1 = hed_alg1_nn$h %>% stats::filter(., rep(1/5,5)),
Hedge_1   = hed_alg2_nn$h %>% stats::filter(., rep(1/5,5)),
AdaHedge  = ada_alg_nn$h%>% stats::filter(., rep(1/5,5)))
p2<-ggplot(results2, aes(x = iter)) +
geom_line(aes(y = RF, color = "RF"), linetype = "solid", size = 1) +
geom_line(aes(y = NN, color = "NN"), linetype = "solid", size = 1) +
geom_line(aes(y = Hedge_0.1, color = "eta = 0.1"), linetype = "longdash", size = 1) +
geom_line(aes(y = Hedge_1, color = "eta = 1"), linetype = "longdash", size = 1) +
geom_line(aes(y = AdaHedge, color = "Adaptive eta"), linetype = "dashed", size = 1) +
labs(title = "", x = "Iter", y = "Hedge Loss", color = "") +
scale_color_manual(
values = c("RF" = "blue", "eta = 0.1" = "red", "eta = 1" = "forestgreen", "Adaptive eta" = "orange", "NN" = "pink"),
labels = c("RF" = "RF", "eta = 0.1" = expression(eta==0.1), "eta = 1" = expression(eta==1), "Adaptive eta" = expression(paste("Adaptive ",eta)), "NN" = "NN")) +
theme_minimal() + theme(legend.position = "right", axis.title.y = element_text(size = 20), axis.title.x = element_text(size = 20), legend.text = element_text(size = 12)) +
ylim(1.55, 1.9)
grid.arrange(p1, p2, nrow = 1)
